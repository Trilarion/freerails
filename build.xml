<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="jFreeRails" default="bindist" basedir=".">
   <description>The aim of the FreeRails project is to create a fun game based off the RailRoad Tycoon and RailRoad Tycoon II games.</description>

   <target name="init" depends="properties">
      <tstamp />

      <property name="src" location="src" />

      <property name="build" location="build" />

      <property name="dist" location="dist" />

      <property name="doc" location="doc" />
   </target>

   <target name="mkdirs" depends="init">
      <tstamp />

      <mkdir dir="${build}" />

      <mkdir dir="${dist}/lib" />
   </target>

   <target name="properties" if="eclipse.running">
      <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
   </target>

   <target name="copydata" depends="init" description="Copy data files">
      <copy todir="${build}/jfreerails/data">
         <fileset dir="${src}/jfreerails/data">
            <include name="*.xml" />

            <include name="*.png" />

            <include name="*.dtd" />
         </fileset>
      </copy>

      <copy todir="${build}">
         <fileset dir=".">
            <include name="README" />

            <include name="TODO" />

            <include name="ChangeLog" />
         </fileset>
      </copy>
   </target>

   <target name="compile" depends="copydata" description="Build everything except JUnit test-classes">
      <javac srcdir="${src}" destdir="${build}" fork="true">
         <exclude name="**/*Test.java" />
      </javac>
   </target>

   <target name="debugcompile" depends="copydata" description="Build everything including JUnit test-classes">
      <javac srcdir="${src}" destdir="${build}" fork="true" />
   </target>

   <target name="runtests" depends="debugcompile" description="Run all junit tests">
      <junit printsummary="yes" haltonfailure="yes">
         <classpath>
            <pathelement location="${build}" />

            <pathelement path="${java.class.path}" />
         </classpath>

         <formatter type="brief" usefile="no" />

         <batchtest fork="yes">
            <fileset dir="${build}">
               <include name="**/*Test.class" />
            </fileset>
         </batchtest>
      </junit>
   </target>

   <target name="bindist" depends="compile" description="Generate binary distribution">
      <jar destfile="${dist}/lib/jFreeRails-${DSTAMP}-bin.jar" basedir="${build}">
         <manifest>
            <attribute name="Main-Class" value="jfreerails.RunFreerails" />
         </manifest>
      </jar>
   </target>

   <target name="srcdist" depends="init" description="Generate source distribution">
      <jar destfile="${dist}/lib/jFreeRails-${DSTAMP}-src.jar" basedir=".">
         <include name="src/**/*.java" />

         <include name="build.xml" />

         <include name="src/jfreerails/data/*.xml" />

         <include name="src/jfreerails/data/*.png" />

         <include name="src/jfreerails/data/*.dtd" />

         <include name="README" />

         <include name="TODO" />

         <include name="ChangeLog" />
      </jar>
   </target>

   <target name="clean" description="Clean up build and distribution">
      <delete dir="${build}" />

      <delete dir="${dist}" />

      <delete dir="${doc}" />
   </target>

   <target name="run" depends="compile" description="Test run based on compile">
      <java classname="jfreerails.RunFreerails" fork="true">
         <classpath>
            <pathelement path="${build}" />
         </classpath>
      </java>
   </target>

   <target name="rundist" depends="bindist" description="Test run based on bindist">
      <java jar="${dist}/lib/jFreeRails-${DSTAMP}-bin.jar" fork="true" />
   </target>

   <target name="world_javadoc">
      <javadoc destdir="${doc}" author="true" version="true" use="true" windowtitle="Freerails World API">
         <fileset dir="${src}" defaultexcludes="yes">
            <include name="jfreerails/util/**" />
			<include name="jfreerails/misc/**" />
            <include name="jfreerails/world/**" />

            <exclude name="**/*Test.java" />
         </fileset>
      </javadoc>
   </target>

   <target name="jar_doc" depends="mkdirs, world_javadoc, init">
      <jar destfile="${dist}/lib/jFreeRails-${DSTAMP}-javadoc.jar" basedir=".">
         <include name="doc/**/*" />
      </jar>
   </target>

   <target name="all_dist" depends="jar_doc, bindist, srcdist" description="Create binary, source, and javadoc jars">
   </target>

<!-- Requires that NetComponents.jar is in ant/lib -->
   <target name="upload" depends="all_dist" description="Upload source, binary, and javadocs jar files to sourcforge">
      <ftp server="upload.sourceforge.net" userid="anonymous" password="me@myorg.com" remotedir="/incoming" binary="yes">
         <fileset dir="${dist}/lib">
            <include name="*.jar" />
         </fileset>
      </ftp>
   </target>
</project>

