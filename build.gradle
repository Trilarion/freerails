import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

group 'org.freerails'
version '0.4.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls' ]
}

sourceSets {
    tools
}

dependencies {
    implementation 'log4j:log4j:1.2.17'
    implementation 'com.google.code.gson:gson:2.8.3'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.jetbrains:annotations:16.0.1'
    testImplementation 'junit:junit:4.12'
    toolsImplementation sourceSets.main.output
}

mainClassName = 'freerails.client.launcher.LauncherFrame'

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

jar {
    manifest {
        attributes(
                 'Main-Class': mainClassName
        )
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task generateVersionInfo {
    // gets the short SHA of the last commit and the information if there are uncommited changes (-M indicating that there is a modification)
    String git_revision = "git rev-parse --short HEAD".execute().text.trim() + ("git diff-index --quiet HEAD --".execute().waitFor() == 1 ? "-M" : "")
    // get current date and time in a fixed format
    SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
    String date = sdfDate.format(new Date())

    def outputDir = file("$buildDir/../src/main/java/freerails")
    outputs.dir outputDir
    doFirst {
        outputDir.exists() || outputDir.mkdirs()
        def srcFile = new File(outputDir, "Version.java")
        srcFile.write(
                """
package freerails;

public final class Version {
    public static final String VERSION = "$project.version";
    public static final String GIT_REVISION = "$git_revision";
    public static final String CREATION_DATE = "$date";
}
""")
    }
}

compileJava.dependsOn generateVersionInfo
compileJava.source generateVersionInfo.outputs.files, sourceSets.main.java