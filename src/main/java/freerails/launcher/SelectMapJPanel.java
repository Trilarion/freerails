/*
 * SelectMapJPanel.java
 *
 * Created on 31 August 2005, 00:19
 */

package freerails.launcher;

import freerails.launcher.LauncherInterface.MSG_TYPE;
import freerails.server.SavedGamesManagerImpl;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * The Launcher panel that lets you load a game or start a new game with a
 * choice of maps.
 *
 * @author Luke
 */
public class SelectMapJPanel extends javax.swing.JPanel implements
        LauncherPanel {
    private static final long serialVersionUID = 3763096353857024568L;

    private static final String SELECT_A_MAP = "Select a map.";

    private static final String INVALID_PORT = "A valid port value is between between 0 and 65535.";

    private final LauncherInterface owner;

    public enum Selection {
        NONE, NEW_GAME, LOAD_GAME
    }

    ;

    Selection getSelection() {
        if (newmapsJList.getSelectedIndex() != -1) {
            savedmapsJList.setSelectedIndex(-1);
            return Selection.NEW_GAME;
        }

        if (savedmapsJList.getSelectedIndex() != -1) {
            return Selection.LOAD_GAME;
        }
        return Selection.NONE;
    }

    void setServerPortPanelVisible(boolean b) {
        this.jPanel3.setVisible(b);
    }

    public String getNewMapName() {
        return (String) newmapsJList.getSelectedValue();
    }

    public String getSaveGameName() {
        return (String) savedmapsJList.getSelectedValue();
    }

    SelectMapJPanel(LauncherInterface owner) {
        this.owner = owner;

        initComponents();

        /* initialise the map list */
        SavedGamesManagerImpl sgm = new SavedGamesManagerImpl();
        newmapsJList.setListData(sgm.getNewMapNames());
        savedmapsJList.setListData(sgm.getSaveGameNames());
        if (sgm.getSaveGameNames().length > 0) {
            savedmapsJList.setSelectedIndex(0);
        } else {
            newmapsJList.setSelectedIndex(0);
        }

        owner.setNextEnabled(true);

        // Listen for changes in the server port text box.
        serverPort.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                validateInput();
            }

            public void removeUpdate(DocumentEvent e) {
                validateInput();
            }

            public void changedUpdate(DocumentEvent e) {
                validateInput();
            }

        });
    }

    int getServerPort() {
        String s = serverPort.getText();
        return Integer.parseInt(s);
    }

    public boolean validateInput() {
        /* Validate map selection. */
        if (this.getSelection().equals(Selection.NONE)) {
            owner.setInfoText(SELECT_A_MAP, MSG_TYPE.ERROR);
            return false;
        }

        /* Validate port. */
        try {
            int port = getServerPort();
            if (port < 0 || port > 65535) {
                owner.setInfoText(INVALID_PORT, MSG_TYPE.ERROR);
                return false;
            }
        } catch (Exception e) {
            owner.setInfoText(INVALID_PORT, MSG_TYPE.ERROR);
            return false;
        }

        /* Everything is ok. */
        owner.hideErrorMessages();
        owner.setProperty(LauncherInterface.SERVER_PORT_PROPERTY, this.serverPort.getText());
        owner.saveProps();
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code
    // ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        newmapsJList = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        savedmapsJList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        portLabel = new javax.swing.JLabel();
        serverPort = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(
                new javax.swing.border.EtchedBorder(), "New Game"));
        jPanel1.setPreferredSize(null);
        jScrollPane1.setViewportBorder(new javax.swing.border.BevelBorder(
                javax.swing.border.BevelBorder.LOWERED));
        newmapsJList
                .setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        newmapsJList
                .addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                    public void valueChanged(
                            javax.swing.event.ListSelectionEvent evt) {
                        newmapsJListValueChanged(evt);
                    }
                });

        jScrollPane1.setViewportView(newmapsJList);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder(
                new javax.swing.border.EtchedBorder(), "Load game"));
        jPanel4.setPreferredSize(null);
        jPanel4.setRequestFocusEnabled(false);
        jScrollPane2.setViewportBorder(new javax.swing.border.BevelBorder(
                javax.swing.border.BevelBorder.LOWERED));
        savedmapsJList
                .setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        savedmapsJList
                .addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                    public void valueChanged(
                            javax.swing.event.ListSelectionEvent evt) {
                        savedmapsJListValueChanged(evt);
                    }
                });

        jScrollPane2.setViewportView(savedmapsJList);

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel4, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.TitledBorder(
                new javax.swing.border.EtchedBorder(), "Server port"));
        portLabel.setText("Port:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(portLabel, gridBagConstraints);

        serverPort.setColumns(6);
        serverPort.setText(owner.getProperty(LauncherInterface.SERVER_PORT_PROPERTY));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(serverPort, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel3, gridBagConstraints);

    }

    // </editor-fold>//GEN-END:initComponents

    private void savedmapsJListValueChanged(
            javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_savedmapsJListValueChanged
        if (savedmapsJList.getSelectedIndex() != -1)
            newmapsJList.clearSelection();

        validateInput();
    }// GEN-LAST:event_savedmapsJListValueChanged

    private void newmapsJListValueChanged(
            javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_newmapsJListValueChanged
        if (newmapsJList.getSelectedIndex() != -1)
            savedmapsJList.clearSelection();

        validateInput();

    }// GEN-LAST:event_newmapsJListValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JList newmapsJList;
    javax.swing.JLabel portLabel;
    javax.swing.JList savedmapsJList;
    javax.swing.JTextField serverPort;
    // End of variables declaration//GEN-END:variables

}
