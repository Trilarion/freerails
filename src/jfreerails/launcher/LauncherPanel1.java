/*
 * LauncherPanel1.java
 *
 * Created on 20 December 2003, 14:58
 */

package jfreerails.launcher;



import javax.swing.ButtonModel;

/**
 * The first launcher panel, lets you choose 'single player', 'start network game' etc.
 * @author rtuck99@users.sourceforge.net
 */
final class LauncherPanel1 extends javax.swing.JPanel {
    static final int MODE_SINGLE_PLAYER = 0;
    static final int MODE_START_NETWORK_GAME = 1;
    static final int MODE_JOIN_NETWORK_GAME = 2;
    static final int MODE_SERVER_ONLY = 3;
    
    private final LauncherInterface owner;
    
    private final ButtonModel[] buttonModels = new ButtonModel[4];
    
    int getMode() {
        for (int i = 0; i < buttonModels.length; i++) {
            if (buttonGroup1.getSelection() == buttonModels[i]) {
                return i;
            }
        }
        assert false;
        return 0;
    }
    
    
    
    
    
    private void validateSettings() {
        boolean isValid = false;
        String infoText = null;
        
        switch (getMode()) {
            
            case MODE_SINGLE_PLAYER:
                isValid = true;
                break;
            case MODE_START_NETWORK_GAME:
            case MODE_SERVER_ONLY:
                isValid = true;
                break;
            case MODE_JOIN_NETWORK_GAME:
                isValid = true;
                break;
        }
        owner.setInfoText(infoText);
        owner.setNextEnabled(isValid);
    }
    
    public LauncherPanel1(LauncherInterface owner) {
        initComponents();
        this.owner = owner;
        
        buttonModels[MODE_SINGLE_PLAYER] = singlePlayerButton.getModel();
        buttonModels[MODE_START_NETWORK_GAME] = startNetworkButton.getModel();
        buttonModels[MODE_JOIN_NETWORK_GAME] = joinNetworkButton.getModel();
        buttonModels[MODE_SERVER_ONLY] = serverOnlyButton.getModel();
        validateSettings();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        singlePlayerButton = new javax.swing.JRadioButton();
        startNetworkButton = new javax.swing.JRadioButton();
        joinNetworkButton = new javax.swing.JRadioButton();
        serverOnlyButton = new javax.swing.JRadioButton();
        paddingJPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.EtchedBorder(), "Select Game Type"));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        singlePlayerButton.setSelected(true);
        singlePlayerButton.setText("Single-Player");
        buttonGroup1.add(singlePlayerButton);
        singlePlayerButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                singlePlayerButtonStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(singlePlayerButton, gridBagConstraints);

        startNetworkButton.setText("Start a network game");
        buttonGroup1.add(startNetworkButton);
        startNetworkButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                startNetworkButtonStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(startNetworkButton, gridBagConstraints);

        joinNetworkButton.setText("Join a network game");
        buttonGroup1.add(joinNetworkButton);
        joinNetworkButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                joinNetworkButtonStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(joinNetworkButton, gridBagConstraints);

        serverOnlyButton.setText("Server only");
        buttonGroup1.add(serverOnlyButton);
        serverOnlyButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                serverOnlyButtonStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(serverOnlyButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(paddingJPanel, gridBagConstraints);

    }//GEN-END:initComponents
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        validateSettings();
    }//GEN-LAST:event_formComponentShown
    
    private void serverOnlyButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_serverOnlyButtonStateChanged
        validateSettings();
    }//GEN-LAST:event_serverOnlyButtonStateChanged
    
    private void joinNetworkButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_joinNetworkButtonStateChanged
        validateSettings();
    }//GEN-LAST:event_joinNetworkButtonStateChanged
    
    private void startNetworkButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_startNetworkButtonStateChanged
        validateSettings();
    }//GEN-LAST:event_startNetworkButtonStateChanged
    
    private void singlePlayerButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_singlePlayerButtonStateChanged
        validateSettings();
    }//GEN-LAST:event_singlePlayerButtonStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton joinNetworkButton;
    private javax.swing.JPanel paddingJPanel;
    private javax.swing.JRadioButton serverOnlyButton;
    private javax.swing.JRadioButton singlePlayerButton;
    private javax.swing.JRadioButton startNetworkButton;
    // End of variables declaration//GEN-END:variables
    
}
