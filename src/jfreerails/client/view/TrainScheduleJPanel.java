/*
 * TrainScheduleJPanel.java
 *
 * Created on 17 April 2003, 20:25
 */

package jfreerails.client.view;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import jfreerails.client.renderer.ViewLists;
import jfreerails.world.top.KEY;
import jfreerails.world.top.NonNullElements;
import jfreerails.world.top.World;
import jfreerails.world.top.WorldIterator;
import jfreerails.world.train.*;
/**
 *
 * @author  Luke
 */
public class TrainScheduleJPanel extends javax.swing.JPanel implements View {
    
    private World w;
    
    private WorldIterator wi;
    
    private TrainOrders gotoStation;
    
    
    /** Creates new form TrainScheduleJPanel */
    public TrainScheduleJPanel() {
        initComponents();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        trainOrders1 = new jfreerails.client.view.TrainOrders();
        trainOrders1.setOrderID("P");
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        trainOrders2 = new jfreerails.client.view.TrainOrders();
        trainOrders2.setOrderID("1.");
        trainOrders3 = new jfreerails.client.view.TrainOrders();
        trainOrders3.setOrderID("2.");
        trainOrders4 = new jfreerails.client.view.TrainOrders();
        trainOrders4.setOrderID("3.");
        trainOrders5 = new jfreerails.client.view.TrainOrders();
        trainOrders5.setOrderID("4.");
        jPanel2 = new javax.swing.JPanel();
        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        done = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        heading.setFont(new java.awt.Font("Dialog", 1, 14));
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("TRAIN ORDERS #10000");
        heading.setPreferredSize(new java.awt.Dimension(300, 30));
        jPanel1.add(heading);

        add(jPanel1);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Priority Orders");
        jLabel12.setPreferredSize(new java.awt.Dimension(200, 16));
        jPanel12.add(jLabel12);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("Priority Consist:");
        jPanel12.add(jLabel22);

        add(jPanel12);

        trainOrders1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                trainOrders1KeyPressed(evt);
            }
        });

        add(trainOrders1);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Scheduled Stops");
        jLabel11.setPreferredSize(new java.awt.Dimension(200, 16));
        jPanel11.add(jLabel11);

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("New Consist");
        jPanel11.add(jLabel21);

        add(jPanel11);

        trainOrders2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                trainOrders2KeyPressed(evt);
            }
        });

        add(trainOrders2);

        trainOrders3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                trainOrders3KeyPressed(evt);
            }
        });

        add(trainOrders3);

        trainOrders4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                trainOrders4KeyPressed(evt);
            }
        });

        add(trainOrders4);

        trainOrders5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                trainOrders5KeyPressed(evt);
            }
        });

        add(trainOrders5);

        previous.setText("<- previous");
        previous.setActionCommand("previous");
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        jPanel2.add(previous);

        next.setText("next ->");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jPanel2.add(next);

        done.setText("Done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        jPanel2.add(done);

        add(jPanel2);

    }//GEN-END:initComponents
    
    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        // Add your handling code here:
        if(wi.previous()){
            display();
        }else{
            throw new IllegalStateException();
        }
        
    }//GEN-LAST:event_previousActionPerformed
    
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // Add your handling code here:
        if(wi.next() ){
            display();
        }else{
            throw new IllegalStateException();
        }
    }//GEN-LAST:event_nextActionPerformed
    
    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_doneActionPerformed
    
    private void trainOrders5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trainOrders5KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_UP){
            this.trainOrders4.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_G){
            setGotoStation(trainOrders5);
        }
        
    }//GEN-LAST:event_trainOrders5KeyPressed
    
    private void setGotoStation(TrainOrders orders){
        
        if(null!=gotoStation){
            gotoStation.setGotoStation(false);
        }
        gotoStation = orders;
        orders.setGotoStation(true);
        orders.repaint();
        
    }
    
    private void trainOrders4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trainOrders4KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_UP){
            this.trainOrders3.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            this.trainOrders5.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_G){
            setGotoStation(trainOrders4);
        }
    }//GEN-LAST:event_trainOrders4KeyPressed
    
    private void trainOrders3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trainOrders3KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_UP){
            this.trainOrders2.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            this.trainOrders4.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_G){
            setGotoStation(trainOrders3);
        }
    }//GEN-LAST:event_trainOrders3KeyPressed
    
    private void trainOrders2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trainOrders2KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_UP){
            this.trainOrders1.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            this.trainOrders3.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_G){
            setGotoStation(trainOrders2);
        }
    }//GEN-LAST:event_trainOrders2KeyPressed
    
    private void trainOrders1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trainOrders1KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            this.trainOrders2.requestFocus();
        }
        if(evt.getKeyCode()==KeyEvent.VK_G){
            setGotoStation(trainOrders1);
        }
    }//GEN-LAST:event_trainOrders1KeyPressed
    
    public void setup(World w, ViewLists vl, ActionListener submitButtonCallBack) {
        this.w = w;
        trainOrders1.setup(w, vl);
        trainOrders2.setup(w, vl);
        trainOrders3.setup(w, vl);
        trainOrders4.setup(w, vl);
        trainOrders5.setup(w, vl);
        this.done.addActionListener(submitButtonCallBack);
        displayFirst();
    }
    
    
    private void display(){
        int trainNumber = wi.getIndex();
        
        trainOrders1.display(trainNumber, 0);
        trainOrders2.display(trainNumber, 1);
        trainOrders3.display(trainNumber, 2);
        trainOrders4.display(trainNumber, 3);
        trainOrders5.display(trainNumber, 4);
        
        TrainModel train = (TrainModel)wi.getElement();
        Schedule schedule = train.getSchedule();
        switch(schedule.getOrderToGoto()){
            case 0: {
                this.setGotoStation(trainOrders1);
                break;
            }
            case 1: {
                this.setGotoStation(trainOrders2);
                break;
            }
            case 2: {
                this.setGotoStation(trainOrders3);
                break;
            }
            case 3: {
                this.setGotoStation(trainOrders4);
                break;
            }
            case 4: {
                this.setGotoStation(trainOrders5);
                break;
            }
        }
        
        
        if(wi.getRowNumber()>0){
            this.previous.setEnabled(true);
        }else{
            this.previous.setEnabled(false);
        }
        
        if(wi.getRowNumber()<(wi.size()-1)){
            this.next.setEnabled(true);
        }else{
            this.next.setEnabled(false);
        }
        this.heading.setText("TRAIN ORDERS #"+(wi.getRowNumber()+1));
        this.repaint();
    }
    
    public void displayFirst(){
        wi = new NonNullElements(KEY.TRAINS, w);
        if(wi.next()){
            display();
        }else{
            System.out.println("No trains to display!");
        }                
    }
    
    public Schedule getNewSchedule(){
        Schedule newSchedule = new Schedule();
        newSchedule.setOrder(0, this.trainOrders1.getNewOrders());
        newSchedule.setOrder(1, this.trainOrders2.getNewOrders());
        newSchedule.setOrder(2, this.trainOrders3.getNewOrders());
        newSchedule.setOrder(3, this.trainOrders4.getNewOrders());
        newSchedule.setOrder(4, this.trainOrders5.getNewOrders());
        newSchedule.setOrderToGoto(this.gotoStation.orderNo);
        return newSchedule;
    }
    
    public int getTrainNumber(){
        return this.wi.getIndex();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel12;
    private jfreerails.client.view.TrainOrders trainOrders1;
    private javax.swing.JButton done;
    private javax.swing.JButton next;
    private javax.swing.JButton previous;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private jfreerails.client.view.TrainOrders trainOrders5;
    private javax.swing.JLabel jLabel11;
    private jfreerails.client.view.TrainOrders trainOrders2;
    private javax.swing.JPanel jPanel1;
    private jfreerails.client.view.TrainOrders trainOrders3;
    private javax.swing.JLabel jLabel22;
    private jfreerails.client.view.TrainOrders trainOrders4;
    private javax.swing.JLabel heading;
    // End of variables declaration//GEN-END:variables
    
}

