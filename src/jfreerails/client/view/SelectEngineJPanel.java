/*
 * SelectEngineJPanel.java
 *
 * Created on 25 December 2002, 23:00
 */

package jfreerails.client.view;
import java.awt.Component;
import java.awt.Image;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

import jfreerails.client.renderer.SideOnTrainTrainViewImages;
import jfreerails.world.common.Money;
import jfreerails.world.train.EngineType;
/**
 *
 * @author  lindsal8
 * 
 */
public class SelectEngineJPanel extends javax.swing.JPanel {
    DialogueBoxController dialogueBoxController;
    
    /** Creates new form SelectEngineJPanel */
    public SelectEngineJPanel(DialogueBoxController dbc) {
        dialogueBoxController=dbc;
        initComponents ();
        EngineType [] data = new EngineType[]{new EngineType("Grasshopper", 1000, new Money(10000), 10),
        new EngineType("Norris", 1000, new Money(10000), 15),
        };
        
        jList1.setListData(data);
        jList1.setCellRenderer(new TrainCellRenderer());
        jList1ValueChanged(null);   //Disable the ok button if no engine type is selected.
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        okjButton = new javax.swing.JButton();
        canceljButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(400, 350));
        okjButton.setText("OK");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 9, 10);
        add(okjButton, gridBagConstraints);

        canceljButton.setText("Cancel");
        canceljButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canceljButtonMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(canceljButton, gridBagConstraints);

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);

    }//GEN-END:initComponents
    
  private void canceljButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceljButtonMouseClicked
      //Close this dialogue.
      dialogueBoxController.closeCurrentDialogue();
      
  }//GEN-LAST:event_canceljButtonMouseClicked
  
  private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
      //We need to disable the OK button if no engine type is selected.
      
      if(-1==jList1.getSelectedIndex()){
          okjButton.setEnabled(false);
      }else{
          okjButton.setEnabled(true);
      }
  }//GEN-LAST:event_jList1ValueChanged
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okjButton;
    private javax.swing.JButton canceljButton;
    private javax.swing.JList jList1;
    // End of variables declaration//GEN-END:variables
  
  
  final private class TrainCellRenderer implements ListCellRenderer {
      
      
      Image tempImage;
      JLabel label;
      SideOnTrainTrainViewImages sideOnTrainTrainView;
      
      public TrainCellRenderer(){
          sideOnTrainTrainView = new SideOnTrainTrainViewImages(0, 3);
          tempImage = (new javax.swing.ImageIcon(getClass().getResource("/jfreerails/data/engine_350x100.PNG"))).getImage();
          sideOnTrainTrainView.setEngineImage(0, tempImage);
          sideOnTrainTrainView.setEngineImage(1, tempImage);
          sideOnTrainTrainView.setEngineImage(2, tempImage);
          
          label = new  JLabel();//"text", new ImageIcon( tempImage ), SwingConstants.LEFT );
          
      }
      
      public Component getListCellRendererComponent( JList list, Object value, /* value to display*/ int index, /* cell index*/ boolean isSelected, /* is the cell selected*/ boolean cellHasFocus ) /* the list and the cell have the focus*/ {
          EngineType engine = (EngineType)value;
          label.setFont(new java.awt.Font ("Dialog", 0, 12));
          String text = "<html><body>" + ( isSelected ? "<strong>" : "" ) + engine.getEngineTypeName()+ "<br>" + engine.getMaxSpeed() + " m.p.h. "+engine.getPowerAtDrawbar()+" hp $" +engine.getPrice().toString() + ( isSelected ? "</strong>" : "" ) + "</body></html>";
          label.setText(text);
          label.setIcon(new ImageIcon(sideOnTrainTrainView.getEngineImage(index, SideOnTrainTrainViewImages.HEIGHT_50_PIXELS)));
           /*
            if(isSelected){
                label.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black, 4));
            }else{
                label.setBorder(new javax.swing.border.LineBorder(java.awt.Color.white, 4));
            }
            */
          return label;
      }
  }
}
