/*
 * TrainListJPanel.java
 *
 * Created on 18 February 2004, 23:13
 */

package jfreerails.client.view;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import jfreerails.client.common.ModelRoot;
import jfreerails.client.renderer.ViewLists;
import jfreerails.world.player.FreerailsPrincipal;
import jfreerails.world.top.KEY;
import jfreerails.world.top.ReadOnlyWorld;
/**
 * JPanel that didplays a list of trains, used for the train list window and the train list tab.
 * @author  Luke
 */
public class TrainListJPanel extends javax.swing.JPanel implements View {
    
    private ReadOnlyWorld world;
    
    private FreerailsPrincipal principal;
    
    private int lastNumberOfTrains = -1;
    
    /** Creates new form TrainListJPanel. */
    public TrainListJPanel() {
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        closeJButton = new javax.swing.JButton();
        showDetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(400, 300));
        closeJButton.setText("Close");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(closeJButton, gridBagConstraints);

        showDetails.setText("Show details");
        showDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDetailsActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(showDetails, gridBagConstraints);

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);

    }//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
       //if a train is selected, enable the 'show details' button.
        if(jList1.getSelectedIndex() != -1){
            this.showDetails.setEnabled(true);
        }else{
             this.showDetails.setEnabled(false);
        }
    }//GEN-LAST:event_jList1ValueChanged
    
    private void showDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDetailsActionPerformed
        showTrainDetails.actionPerformed(evt);
    }//GEN-LAST:event_showDetailsActionPerformed
    
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // Add your handling code here:
        if(evt.getClickCount()==2){
            showTrainDetails.actionPerformed(null);
        }
    }//GEN-LAST:event_jList1MouseClicked
    
    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            showTrainDetails.actionPerformed(null);
        }
    }//GEN-LAST:event_jList1KeyPressed
    
    public void setup(ModelRoot mr,  ViewLists vl, ActionListener submitButtonCallBack) {
        world = mr.getWorld();
        jList1.setModel(new World2ListModelAdapter(mr.getWorld(), KEY.TRAINS, mr.getPrincipal()));
        TrainViewJPanel trainView =
        new TrainViewJPanel(mr, vl);
        jList1.setCellRenderer(trainView);
        trainView.setHeight(trainViewHeight);
        ActionListener[] oldListeners = closeJButton.getActionListeners();
        for(int i = 0; i < oldListeners.length; i ++){
            closeJButton.removeActionListener(oldListeners[i]);
        }
        closeJButton.addActionListener(submitButtonCallBack);
        principal = mr.getPrincipal();
    }
    
    void setShowTrainDetailsActionListener(ActionListener l){
        showTrainDetails = l;
        
    }
    
    
    
    private ActionListener showTrainDetails = new ActionListener(){
        public void actionPerformed(ActionEvent arg0) {
           
        }
    };
    
    int getSelectedTrainID(){
        return jList1.getSelectedIndex();
    }
    
    /** When the train list is shown on a tab we don't want the buttons.*/
    void removeButtons(){
        this.removeAll();
        
        java.awt.GridBagConstraints gridBagConstraints;
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeJButton;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton showDetails;
    // End of variables declaration//GEN-END:variables
    
    private int trainViewHeight= 50;
    
    
    public void setVisible(boolean aFlag) {
        if(aFlag  && null != world){
            //jList1.setModel(new World2ListModelAdapter(world, KEY.TRAINS,principal));
        }
        super.setVisible(aFlag);
    }
    
    public void setTrainViewHeight(int trainViewHeight) {
        this.trainViewHeight = trainViewHeight;
    }
    
    public void paint(Graphics g) {
        if(null!=world){
            int newNumberOfTrains = this.world.size( KEY.TRAINS,principal);
            if(newNumberOfTrains != this.lastNumberOfTrains){
                jList1.setModel(new World2ListModelAdapter(world, KEY.TRAINS,principal));
                jList1.setSelectedIndex(0);
                lastNumberOfTrains = newNumberOfTrains;
            }
        }
        super.paint(g);
        
    }
    
}
