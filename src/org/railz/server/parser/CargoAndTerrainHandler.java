/*
 * Copyright (C) Luke Lindsay
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/*
 * File:           RulesHandler.java
 * Date:           27 April 2003  21:34
 *
 * @author  Luke
 * @version generated by NetBeans XML module
 */
package org.railz.server.parser;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;


public interface CargoAndTerrainHandler {
    /**
     * An empty element event handling method.
     * @param data value or null
     *
     */
    public void handle_Converts(final Attributes meta)
        throws SAXException;

    /**
     * A container element start event handling method.
     * @param meta attributes
     *
     */
    public void start_Tile(final Attributes meta) throws SAXException;

    /**
     * A container element end event handling method.
     *
     */
    public void end_Tile() throws SAXException;

    /**
     * An empty element event handling method.
     * @param data value or null
     *
     */
    public void handle_Cargo(final Attributes meta) throws SAXException;

    /**
     * A container element start event handling method.
     * @param meta attributes
     *
     */
    public void start_Cargo_Types(final Attributes meta)
        throws SAXException;

    /**
     * A container element end event handling method.
     *
     */
    public void end_Cargo_Types() throws SAXException;

    /**
     * A container element start event handling method.
     * @param meta attributes
     *
     */
    public void start_Terrain_Types(final Attributes meta)
        throws SAXException;

    /**
     * A container element end event handling method.
     *
     */
    public void end_Terrain_Types() throws SAXException;

    /**
     * A container element start event handling method.
     * @param meta attributes
     *
     */
    public void start_Types(final Attributes meta) throws SAXException;

    /**
     * A container element end event handling method.
     *
     */
    public void end_Types() throws SAXException;

    /**
     * An empty element event handling method.
     * @param data value or null
     *
     */
    public void handle_Consumes(final Attributes meta)
        throws SAXException;

    /**
     * An empty element event handling method.
     * @param data value or null
     *
     */
    public void handle_Produces(final Attributes meta)
        throws SAXException;

    public void handle_Building_Types(final Attributes meta) throws
	SAXException;

    public void start_Building_Type(final Attributes meta) throws
	SAXException;

    public void end_Building_Type() throws SAXException;

    public void handle_trackPieceTemplate(final Attributes meta) throws
	SAXException;

    public void start_NeighbouringTerrainTypes(final Attributes meta) throws
	SAXException;

    public void end_NeighbouringTerrainTypes() throws SAXException;

    public void start_AcceptableTerrainTypes(final Attributes meta) throws
	SAXException;

    public void end_AcceptableTerrainTypes() throws SAXException;

    public void handle_TerrainType(final Attributes meta) throws SAXException;

    public void handle_AllTerrainTypes(final Attributes meta) throws
	SAXException;
}
