/*
 * Copyright (C) 2004 Robert Tuck
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/*
 * WagonSelectionJPanel.java
 *
 * Created on 18 September 2004, 18:03
 */

package org.railz.client.view;

import java.awt.event.*;
import java.awt.*;
import javax.swing.*;

import org.railz.client.model.*;
import org.railz.world.top.*;
import org.railz.world.train.*;
/**
 *
 * @author  bob
 */
class WagonSelectionJPanel extends javax.swing.JPanel {
    private TrainModel train;
    
    /** Creates new form WagonSelectionJPanel */
    public WagonSelectionJPanel() {
        initComponents();
	trainViewJPanel21.addActionListener(trainViewJPanelListener);
    }
    
    public void setup(ModelRoot mr, TrainModel tm) {
	World2ListModelAdapter w2lma = new World2ListModelAdapter(mr.getWorld(),
		    KEY.CARGO_TYPES, mr.getPlayerPrincipal());
	wagonsJList.setModel(w2lma);
	wagonsJList.setCellRenderer(new WagonCellRenderer
	    (w2lma, mr.getViewLists().getTrainImages()));
	wagonsJList.addMouseListener(wagonsListMouseListener);

	train = tm;
	trainViewJPanel21.setup(mr, train);
    }

    private MouseListener wagonsListMouseListener = new MouseAdapter() {
	public void mouseClicked(MouseEvent e) {
	    if (! train.canAddWagon())
		return;

	    int[] wagons = new int[train.getNumberOfWagons() + 1];
	    for (int i = 0; i < wagons.length - 1; i++)
		wagons[i] = train.getWagon(i);
	    
	    wagons[wagons.length - 1] = wagonsJList.getSelectedIndex();
	    train = train.getNewInstance(train.getEngineType(), wagons);
	    trainViewJPanel21.setTrain(train);
	}
    };

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        wagonsJList = new javax.swing.JList();
        trainViewJPanel21 = new org.railz.client.view.TrainViewJPanel2();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(250, 350));
        jScrollPane1.setViewportView(wagonsJList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane1, gridBagConstraints);

        trainViewJPanel21.setCenterTrain(true);
        trainViewJPanel21.setShowCargo(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(trainViewJPanel21, gridBagConstraints);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private org.railz.client.view.TrainViewJPanel2 trainViewJPanel21;
    private javax.swing.JList wagonsJList;
    // End of variables declaration//GEN-END:variables
    
    private ActionListener trainViewJPanelListener = new ActionListener() {
	public void actionPerformed(ActionEvent e) {
	    /* remove the selected wagon */
	    int[] wagons = new int [train.getNumberOfWagons() - 1];
	    int j = 0;
	    for (int i = 0; i < train.getNumberOfWagons(); i++) {
		if (i == trainViewJPanel21.getSelectedWagon())
		    continue;
		wagons[j] = train.getWagon(i);
		j++;
	    }
	    train = train.getNewInstance(train.getEngineType(), wagons);
	    trainViewJPanel21.setTrain(train);
	}
    };

    public int[] getWagons() {
	int[] wagons = new int[train.getNumberOfWagons()];
	for (int i = 0; i < train.getNumberOfWagons(); i++) 
	    wagons[i] = train.getWagon(i);
	return wagons;
    }
}
